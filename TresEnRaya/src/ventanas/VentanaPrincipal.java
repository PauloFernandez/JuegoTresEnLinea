package ventanas;

import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;

public class VentanaPrincipal extends javax.swing.JFrame {

    private boolean casilla[][] = new boolean[3][3];
    private int matriz[][] = new int[3][3];
    private String turno = "usuario1";
    private String usuario1, usuario2;
    private int vecesganador1 = 0, vecesganador2 = 0, vecesempate = 0;

    public VentanaPrincipal(String usuario1, String usuario2) {
        initComponents();
        setSize(615, 640);
        setLocationRelativeTo(null);

        this.usuario1 = usuario1;
        this.usuario2 = usuario2;
        setTitle("Usuario 1: " + this.usuario1 + ", Usuario 2: " + this.usuario2);

        llenarCasillas();
        llenarMatriz();
    }

    private void llenarCasillas() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                casilla[i][j] = true;
            }
        }
    }

    private void llenarMatriz() {
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                matriz[i][j] = 0;
            }
        }
    }

    private void comprovarGanador() {
        boolean ganador1 = false;
        boolean ganador2 = false;
        int casillasEmpate = 0;
        ganador1 = comprobar(1);
        ganador2 = comprobar(2);

        if (ganador1 == true) {
            vecesganador1++;
            VentanaGanador ganadores = new VentanaGanador(this, true, usuario1);
            ganadores.setVisible(true);
            reiniciarJuego();
        } else if (ganador2 == true) {
            vecesganador2++;
            VentanaGanador ganadores = new VentanaGanador(this, true, usuario2);
            ganadores.setVisible(true);
            reiniciarJuego();
        } else {
            for (int i = 0; i < 3; i++) {
                for (int j = 0; j < 3; j++) {
                    if (matriz[i][j] != 0) {
                        casillasEmpate++;
                    }
                }
            }
            if (casillasEmpate == 9) {
                vecesempate++;
                VentanaEmpate empate = new VentanaEmpate(this, true);
                empate.setVisible(true);
                reiniciarJuego();
            }
        }
    }

    private boolean comprobar(int num) {
        boolean ganador = false;
        if (matriz[0][0] == num && matriz[0][1] == num && matriz[0][2] == num) {
            ganador = true;
        } else if (matriz[1][0] == num && matriz[1][1] == num && matriz[1][2] == num) {
            ganador = true;
        } else if (matriz[2][0] == num && matriz[2][1] == num && matriz[2][2] == num) {
            ganador = true;
        } else if (matriz[0][0] == num && matriz[1][0] == num && matriz[2][0] == num) {
            ganador = true;
        } else if (matriz[0][1] == num && matriz[1][1] == num && matriz[2][1] == num) {
            ganador = true;
        } else if (matriz[0][2] == num && matriz[1][2] == num && matriz[2][2] == num) {
            ganador = true;
        } else if (matriz[0][0] == num && matriz[1][1] == num && matriz[2][2] == num) {
            ganador = true;
        } else if (matriz[0][2] == num && matriz[1][1] == num && matriz[2][0] == num) {
            ganador = true;
        }

        return ganador;
    }

    private void reiniciarJuego() {
        llenarCasillas();
        llenarMatriz();

        btnArribaIzquierda.setIcon(null);
        btnArriba.setIcon(null);
        btnArribaDerecha.setIcon(null);
        btnIzquierda.setIcon(null);
        btnCentro.setIcon(null);
        btnDerecha.setIcon(null);
        btnAbajoIzquierda.setIcon(null);
        btnAbajo.setIcon(null);
        btnAbajoDerecha.setIcon(null);

        primeroEnJugar();
    }

    private void primeroEnJugar() {
        VentanaEscogerTurno escoger = new VentanaEscogerTurno(this, true, usuario1, usuario2);
        escoger.setVisible(true);
        turno = escoger.getTurno();
    }

    private void dibujarX(JButton boton) {
        boton.setIcon(new ImageIcon(getClass().getResource("/imagenes/X.png")));
    }

    private void dibujarO(JButton boton) {
        boton.setIcon(new ImageIcon(getClass().getResource("/imagenes/O.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        btnArribaIzquierda = new javax.swing.JButton();
        btnArriba = new javax.swing.JButton();
        btnArribaDerecha = new javax.swing.JButton();
        btnIzquierda = new javax.swing.JButton();
        btnCentro = new javax.swing.JButton();
        btnDerecha = new javax.swing.JButton();
        btnAbajoIzquierda = new javax.swing.JButton();
        btnAbajo = new javax.swing.JButton();
        btnAbajoDerecha = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MenuC_Nuevo = new javax.swing.JMenuItem();
        MenuMostrarResultado = new javax.swing.JMenuItem();
        MenuSalir = new javax.swing.JMenuItem();
        MenuAyuda = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(615, 640));

        Panel.setPreferredSize(new java.awt.Dimension(600, 600));

        btnArribaIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArribaIzquierdaActionPerformed(evt);
            }
        });

        btnArriba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArribaActionPerformed(evt);
            }
        });

        btnArribaDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArribaDerechaActionPerformed(evt);
            }
        });

        btnIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzquierdaActionPerformed(evt);
            }
        });

        btnCentro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCentroActionPerformed(evt);
            }
        });

        btnDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDerechaActionPerformed(evt);
            }
        });

        btnAbajoIzquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbajoIzquierdaActionPerformed(evt);
            }
        });

        btnAbajo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbajoActionPerformed(evt);
            }
        });

        btnAbajoDerecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbajoDerechaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addComponent(btnArribaIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnArriba, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnArribaDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelLayout.createSequentialGroup()
                .addComponent(btnIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnCentro, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(PanelLayout.createSequentialGroup()
                .addComponent(btnAbajoIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btnAbajoDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnArribaIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArriba, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArribaDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCentro, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAbajoIzquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAbajo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAbajoDerecha, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenu1.setText("Juego");

        MenuC_Nuevo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MenuC_Nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/actualizar.png"))); // NOI18N
        MenuC_Nuevo.setText("Comenzar de nuevo");
        MenuC_Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuC_NuevoActionPerformed(evt);
            }
        });
        jMenu1.add(MenuC_Nuevo);

        MenuMostrarResultado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MenuMostrarResultado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tabla.png"))); // NOI18N
        MenuMostrarResultado.setText("Mostrar Resultados");
        MenuMostrarResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuMostrarResultadoActionPerformed(evt);
            }
        });
        jMenu1.add(MenuMostrarResultado);

        MenuSalir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        MenuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/salir.png"))); // NOI18N
        MenuSalir.setText("Salir");
        MenuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuSalirActionPerformed(evt);
            }
        });
        jMenu1.add(MenuSalir);

        jMenuBar1.add(jMenu1);

        MenuAyuda.setText("Ayuda");
        MenuAyuda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuAyudaMouseClicked(evt);
            }
        });
        jMenuBar1.add(MenuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MenuSalirActionPerformed

    private void btnArribaIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArribaIzquierdaActionPerformed
        if (casilla[0][0] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnArribaIzquierda);
                matriz[0][0] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnArribaIzquierda);
                matriz[0][0] = 2;
                turno = "usuario1";
            }
            casilla[0][0] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnArribaIzquierdaActionPerformed

    private void btnArribaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArribaActionPerformed
        if (casilla[0][1] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnArriba);
                matriz[0][1] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnArriba);
                matriz[0][1] = 2;
                turno = "usuario1";
            }
            casilla[0][1] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnArribaActionPerformed

    private void btnArribaDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArribaDerechaActionPerformed
        if (casilla[0][2] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnArribaDerecha);
                matriz[0][2] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnArribaDerecha);
                matriz[0][2] = 2;
                turno = "usuario1";
            }
            casilla[0][2] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnArribaDerechaActionPerformed

    private void btnIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzquierdaActionPerformed
        if (casilla[1][0] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnIzquierda);
                matriz[1][0] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnIzquierda);
                matriz[1][0] = 2;
                turno = "usuario1";
            }
            casilla[1][0] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnIzquierdaActionPerformed

    private void btnCentroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCentroActionPerformed
        if (casilla[1][1] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnCentro);
                matriz[1][1] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnCentro);
                matriz[1][1] = 2;
                turno = "usuario1";
            }
            casilla[1][1] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnCentroActionPerformed

    private void btnDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDerechaActionPerformed
        if (casilla[1][2] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnDerecha);
                matriz[1][2] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnDerecha);
                matriz[1][2] = 2;
                turno = "usuario1";
            }
            casilla[1][2] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnDerechaActionPerformed

    private void btnAbajoIzquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbajoIzquierdaActionPerformed
        if (casilla[2][0] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnAbajoIzquierda);
                matriz[2][0] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnAbajoIzquierda);
                matriz[2][0] = 2;
                turno = "usuario1";
            }
            casilla[2][0] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnAbajoIzquierdaActionPerformed

    private void btnAbajoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbajoActionPerformed
        if (casilla[2][1] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnAbajo);
                matriz[2][1] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnAbajo);
                matriz[2][1] = 2;
                turno = "usuario1";
            }
            casilla[2][1] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnAbajoActionPerformed

    private void btnAbajoDerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbajoDerechaActionPerformed
        if (casilla[2][2] == true) {
            if (turno.equals("usuario1")) {
                dibujarX(btnAbajoDerecha);
                matriz[2][2] = 1;
                turno = "usuario2";
            } else {
                dibujarO(btnAbajoDerecha);
                matriz[2][2] = 2;
                turno = "usuario1";
            }
            casilla[2][2] = false;
            comprovarGanador();
        }
    }//GEN-LAST:event_btnAbajoDerechaActionPerformed

    private void MenuC_NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuC_NuevoActionPerformed
        vecesganador1 = 0;
        vecesganador2 = 0;
        vecesempate = 0;
        reiniciarJuego();
    }//GEN-LAST:event_MenuC_NuevoActionPerformed

    private void MenuMostrarResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuMostrarResultadoActionPerformed
        VentanaMostrarResultados mostrarResultado = new VentanaMostrarResultados(usuario1, usuario2, vecesganador1, vecesganador2, vecesempate);
        mostrarResultado.setVisible(true);
    }//GEN-LAST:event_MenuMostrarResultadoActionPerformed

    private void MenuAyudaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuAyudaMouseClicked
        try {
            try {
                Desktop.getDesktop().browse(new URI("https://es.wikipedia.org/wiki/Tres_en_l%C3%ADnea"));
            } catch (IOException ex) {
                //Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (URISyntaxException ex) {
            //Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_MenuAyudaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaPrincipal(null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuAyuda;
    private javax.swing.JMenuItem MenuC_Nuevo;
    private javax.swing.JMenuItem MenuMostrarResultado;
    private javax.swing.JMenuItem MenuSalir;
    private javax.swing.JPanel Panel;
    private javax.swing.JButton btnAbajo;
    private javax.swing.JButton btnAbajoDerecha;
    private javax.swing.JButton btnAbajoIzquierda;
    private javax.swing.JButton btnArriba;
    private javax.swing.JButton btnArribaDerecha;
    private javax.swing.JButton btnArribaIzquierda;
    private javax.swing.JButton btnCentro;
    private javax.swing.JButton btnDerecha;
    private javax.swing.JButton btnIzquierda;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
